{"id":"snake.js","dependencies":[{"name":"C:\\workshop\\package\\package.json","includedInParent":true,"mtime":1650599626664},{"name":"jquery","loc":{"line":1,"column":14,"index":14},"parent":"C:\\workshop\\package\\snake.js","resolved":"C:\\workshop\\package\\node_modules\\jquery\\dist\\jquery.js"},{"name":"./block","loc":{"line":2,"column":22,"index":47},"parent":"C:\\workshop\\package\\snake.js","resolved":"C:\\workshop\\package\\block.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Snake = void 0;\n\nvar _jquery = _interopRequireDefault(require(\"jquery\"));\n\nvar _block = require(\"./block\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Snake = /*#__PURE__*/_createClass(function Snake(length, initialXPos, initialYPos, direction) {\n  var _this = this;\n\n  _classCallCheck(this, Snake);\n\n  _defineProperty(this, \"createSnakeBody\", function () {\n    var head = new _block.Block(_this.initialXPos, _this.initialYPos);\n    var body = [1, 2, 3, 4].map(function (step) {\n      return head.nextCell(_this.direction, step);\n    });\n    return [head].concat(_toConsumableArray(body));\n  });\n\n  this.length = length;\n  this.initialXPos = initialXPos;\n  this.initialYPos = initialYPos;\n  this.direction = direction;\n  this.snakebody = this.createSnakeBody();\n});\n\nexports.Snake = Snake;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"snake.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"snake.js","original":{"line":2,"column":0}},{"name":"Snake","generated":{"line":34,"column":4},"source":"snake.js","original":{"line":3,"column":6}},{"generated":{"line":34,"column":38},"source":"snake.js","original":{"line":4,"column":0}},{"name":"length","generated":{"line":34,"column":53},"source":"snake.js","original":{"line":4,"column":13}},{"generated":{"line":34,"column":59},"source":"snake.js","original":{"line":4,"column":0}},{"name":"initialXPos","generated":{"line":34,"column":61},"source":"snake.js","original":{"line":4,"column":20}},{"generated":{"line":34,"column":72},"source":"snake.js","original":{"line":4,"column":0}},{"name":"initialYPos","generated":{"line":34,"column":74},"source":"snake.js","original":{"line":4,"column":32}},{"generated":{"line":34,"column":85},"source":"snake.js","original":{"line":4,"column":0}},{"name":"direction","generated":{"line":34,"column":87},"source":"snake.js","original":{"line":4,"column":44}},{"generated":{"line":34,"column":96},"source":"snake.js","original":{"line":4,"column":0}},{"generated":{"line":34,"column":98},"source":"snake.js","original":{"line":4,"column":54}},{"generated":{"line":35,"column":0},"source":"snake.js","original":{"line":4,"column":54}},{"generated":{"line":37,"column":0},"source":"snake.js","original":{"line":4,"column":54}},{"generated":{"line":39,"column":0},"source":"snake.js","original":{"line":4,"column":54}},{"generated":{"line":39,"column":43},"source":"snake.js","original":{"line":11,"column":18}},{"generated":{"line":39,"column":55},"source":"snake.js","original":{"line":11,"column":24}},{"generated":{"line":40,"column":0},"source":"snake.js","original":{"line":12,"column":4}},{"name":"head","generated":{"line":40,"column":8},"source":"snake.js","original":{"line":12,"column":10}},{"generated":{"line":40,"column":12},"source":"snake.js","original":{"line":12,"column":14}},{"generated":{"line":40,"column":15},"source":"snake.js","original":{"line":12,"column":17}},{"name":"Block","generated":{"line":40,"column":19},"source":"snake.js","original":{"line":12,"column":21}},{"generated":{"line":40,"column":31},"source":"snake.js","original":{"line":12,"column":17}},{"generated":{"line":40,"column":32},"source":"snake.js","original":{"line":12,"column":27}},{"generated":{"line":40,"column":37},"source":"snake.js","original":{"line":12,"column":31}},{"name":"initialXPos","generated":{"line":40,"column":38},"source":"snake.js","original":{"line":12,"column":32}},{"generated":{"line":40,"column":49},"source":"snake.js","original":{"line":12,"column":17}},{"generated":{"line":40,"column":51},"source":"snake.js","original":{"line":12,"column":45}},{"generated":{"line":40,"column":56},"source":"snake.js","original":{"line":12,"column":49}},{"name":"initialYPos","generated":{"line":40,"column":57},"source":"snake.js","original":{"line":12,"column":50}},{"generated":{"line":40,"column":68},"source":"snake.js","original":{"line":12,"column":17}},{"generated":{"line":40,"column":69},"source":"snake.js","original":{"line":12,"column":4}},{"generated":{"line":41,"column":0},"source":"snake.js","original":{"line":13,"column":4}},{"name":"body","generated":{"line":41,"column":8},"source":"snake.js","original":{"line":13,"column":10}},{"generated":{"line":41,"column":12},"source":"snake.js","original":{"line":13,"column":14}},{"generated":{"line":41,"column":15},"source":"snake.js","original":{"line":13,"column":17}},{"generated":{"line":41,"column":16},"source":"snake.js","original":{"line":13,"column":18}},{"generated":{"line":41,"column":17},"source":"snake.js","original":{"line":13,"column":17}},{"generated":{"line":41,"column":19},"source":"snake.js","original":{"line":13,"column":20}},{"generated":{"line":41,"column":20},"source":"snake.js","original":{"line":13,"column":17}},{"generated":{"line":41,"column":22},"source":"snake.js","original":{"line":13,"column":22}},{"generated":{"line":41,"column":23},"source":"snake.js","original":{"line":13,"column":17}},{"generated":{"line":41,"column":25},"source":"snake.js","original":{"line":13,"column":24}},{"generated":{"line":41,"column":26},"source":"snake.js","original":{"line":13,"column":17}},{"name":"map","generated":{"line":41,"column":28},"source":"snake.js","original":{"line":13,"column":27}},{"generated":{"line":41,"column":31},"source":"snake.js","original":{"line":13,"column":17}},{"generated":{"line":41,"column":32},"source":"snake.js","original":{"line":13,"column":31}},{"name":"step","generated":{"line":41,"column":42},"source":"snake.js","original":{"line":13,"column":31}},{"generated":{"line":41,"column":46},"source":"snake.js","original":{"line":13,"column":35}},{"generated":{"line":42,"column":0},"source":"snake.js","original":{"line":13,"column":35}},{"name":"head","generated":{"line":42,"column":13},"source":"snake.js","original":{"line":13,"column":39}},{"generated":{"line":42,"column":17},"source":"snake.js","original":{"line":13,"column":43}},{"name":"nextCell","generated":{"line":42,"column":18},"source":"snake.js","original":{"line":13,"column":44}},{"generated":{"line":42,"column":26},"source":"snake.js","original":{"line":13,"column":39}},{"generated":{"line":42,"column":27},"source":"snake.js","original":{"line":13,"column":53}},{"generated":{"line":42,"column":32},"source":"snake.js","original":{"line":13,"column":57}},{"name":"direction","generated":{"line":42,"column":33},"source":"snake.js","original":{"line":13,"column":58}},{"generated":{"line":42,"column":42},"source":"snake.js","original":{"line":13,"column":39}},{"name":"step","generated":{"line":42,"column":44},"source":"snake.js","original":{"line":13,"column":69}},{"generated":{"line":42,"column":48},"source":"snake.js","original":{"line":13,"column":39}},{"generated":{"line":42,"column":49},"source":"snake.js","original":{"line":13,"column":35}},{"generated":{"line":43,"column":0},"source":"snake.js","original":{"line":13,"column":35}},{"generated":{"line":43,"column":5},"source":"snake.js","original":{"line":13,"column":17}},{"generated":{"line":43,"column":6},"source":"snake.js","original":{"line":13,"column":4}},{"generated":{"line":44,"column":0},"source":"snake.js","original":{"line":14,"column":4}},{"name":"head","generated":{"line":44,"column":12},"source":"snake.js","original":{"line":14,"column":12}},{"generated":{"line":44,"column":16},"source":"snake.js","original":{"line":14,"column":4}},{"name":"body","generated":{"line":44,"column":44},"source":"snake.js","original":{"line":14,"column":21}},{"generated":{"line":44,"column":48},"source":"snake.js","original":{"line":14,"column":4}},{"generated":{"line":45,"column":0},"source":"snake.js","original":{"line":16,"column":1}},{"generated":{"line":45,"column":3},"source":"snake.js","original":{"line":4,"column":54}},{"generated":{"line":47,"column":0},"source":"snake.js","original":{"line":5,"column":4}},{"name":"length","generated":{"line":47,"column":7},"source":"snake.js","original":{"line":5,"column":9}},{"generated":{"line":47,"column":13},"source":"snake.js","original":{"line":5,"column":4}},{"name":"length","generated":{"line":47,"column":16},"source":"snake.js","original":{"line":5,"column":18}},{"generated":{"line":47,"column":22},"source":"snake.js","original":{"line":5,"column":4}},{"generated":{"line":48,"column":0},"source":"snake.js","original":{"line":6,"column":4}},{"name":"initialXPos","generated":{"line":48,"column":7},"source":"snake.js","original":{"line":6,"column":9}},{"generated":{"line":48,"column":18},"source":"snake.js","original":{"line":6,"column":4}},{"name":"initialXPos","generated":{"line":48,"column":21},"source":"snake.js","original":{"line":6,"column":23}},{"generated":{"line":48,"column":32},"source":"snake.js","original":{"line":6,"column":4}},{"generated":{"line":49,"column":0},"source":"snake.js","original":{"line":7,"column":4}},{"name":"initialYPos","generated":{"line":49,"column":7},"source":"snake.js","original":{"line":7,"column":9}},{"generated":{"line":49,"column":18},"source":"snake.js","original":{"line":7,"column":4}},{"name":"initialYPos","generated":{"line":49,"column":21},"source":"snake.js","original":{"line":7,"column":23}},{"generated":{"line":49,"column":32},"source":"snake.js","original":{"line":7,"column":4}},{"generated":{"line":50,"column":0},"source":"snake.js","original":{"line":8,"column":4}},{"name":"direction","generated":{"line":50,"column":7},"source":"snake.js","original":{"line":8,"column":9}},{"generated":{"line":50,"column":16},"source":"snake.js","original":{"line":8,"column":4}},{"name":"direction","generated":{"line":50,"column":19},"source":"snake.js","original":{"line":8,"column":21}},{"generated":{"line":50,"column":28},"source":"snake.js","original":{"line":8,"column":4}},{"generated":{"line":51,"column":0},"source":"snake.js","original":{"line":9,"column":4}},{"name":"snakebody","generated":{"line":51,"column":7},"source":"snake.js","original":{"line":9,"column":9}},{"generated":{"line":51,"column":16},"source":"snake.js","original":{"line":9,"column":4}},{"generated":{"line":51,"column":19},"source":"snake.js","original":{"line":9,"column":21}},{"name":"createSnakeBody","generated":{"line":51,"column":24},"source":"snake.js","original":{"line":9,"column":26}},{"generated":{"line":51,"column":39},"source":"snake.js","original":{"line":9,"column":21}},{"generated":{"line":51,"column":41},"source":"snake.js","original":{"line":9,"column":4}},{"generated":{"line":52,"column":0},"source":"snake.js","original":{"line":10,"column":1}}],"sources":{"snake.js":"import $ from 'jquery';\r\nimport { Block } from './block';\r\nclass Snake{\r\nconstructor (length,initialXPos,initialYPos,direction){\r\n    this.length = length\r\n    this.initialXPos = initialXPos\r\n    this.initialYPos = initialYPos\r\n    this.direction = direction\r\n    this.snakebody = this.createSnakeBody()\r\n}\r\ncreateSnakeBody = () => {\r\n    const head = new Block(this.initialXPos, this.initialYPos);\r\n    const body = [1,2,3,4].map(step => head.nextCell(this.direction, step))\r\n    return [head, ...body]\r\n\r\n}\r\n}\r\n\r\nexport {Snake}"},"lineCount":null}},"error":null,"hash":"3e5d54c92fbfc8c01ff7bc874820adc0","cacheData":{"env":{}}}